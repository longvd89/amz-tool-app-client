import { useCallback, useRef } from 'react';

function usePersistFn(fn) {
  var ref = useRef(function () {
    throw new Error('Cannot call an event handler while rendering.');
  });
  ref.current = fn;
  var persist = useCallback(function () {
    var refFn = ref.current;

    if (refFn) {
      return refFn.apply(void 0, arguments);
    }
  }, [ref]);

  if (typeof fn === 'function') {
    return persist;
  }

  return undefined;
}

export default usePersistFn;